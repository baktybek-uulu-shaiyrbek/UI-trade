version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: trading_postgres
    environment:
      POSTGRES_DB: trading_db
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    command: >
      postgres 
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c max_connections=200
      -c wal_buffers=16MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d trading_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: trading_pgbouncer
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_USER: trading_user
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASES_DBNAME: trading_db
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 50
    depends_on:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: trading_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - postgres

  trading_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trading_backend
    environment:
      DATABASE_URL: postgresql://trading_user:${POSTGRES_PASSWORD}@pgbouncer:6432/trading_db
      BINANCE_API_KEY: ${BINANCE_API_KEY}
      BINANCE_API_SECRET: ${BINANCE_API_SECRET}
    ports:
      - "8765:8765"
    depends_on:
      - pgbouncer
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

networks:
  default:
    name: trading_network